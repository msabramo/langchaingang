name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        uv sync --dev --all-extras
        uv pip install -e .
    
    - name: Run linting with black
      run: uv run black --check .
    
    - name: Run import sorting with isort
      run: uv run isort --check-only .
    
    - name: Run flake8
      run: uv run flake8 src/ tests/
    
    - name: Run mypy
      run: uv run mypy src/
    
    - name: Run tests with pytest
      run: uv run pytest --cov=src --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  test-minimal:
    # Test with minimal dependencies (no optional dependencies)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Set up Python 3.9
      run: uv python install 3.9
    
    - name: Install minimal dependencies
      run: |
        uv sync --dev
        uv pip install -e .
    
    - name: Run tests with minimal dependencies
      run: uv run pytest