[project]
name = "langchaingang"
version = "0.1.0"
description = "A unified interface for LangChain chat model providers"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["langchain", "llm", "ai", "chat", "providers"]
requires-python = ">=3.9"
dependencies = [
    "langchain-core>=0.1.0",
    "langchain-ollama>=0.1.0",
]

[project.optional-dependencies]
openai = ["langchain-openai>=0.1.0"]
anthropic = ["langchain-anthropic>=0.1.0"]
aws = ["langchain-aws>=0.1.0"]
google = ["langchain-google-vertexai>=0.1.0", "langchain-google-genai>=0.1.0"]
ollama = ["langchain-ollama>=0.1.0"]
all = [
    "langchain-openai>=0.1.0",
    "langchain-anthropic>=0.1.0",
    "langchain-aws>=0.1.0",
    "langchain-google-vertexai>=0.1.0",
    "langchain-google-genai>=0.1.0",
    "langchain-ollama>=0.1.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/langchaingang"
Repository = "https://github.com/yourusername/langchaingang"
Documentation = "https://github.com/yourusername/langchaingang#readme"
Issues = "https://github.com/yourusername/langchaingang/issues"

[build-system]
requires = ["uv_build>=0.8.4,<0.9.0"]
build-backend = "uv_build"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src --cov-report=term-missing --cov-report=html"

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["langchaingang"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".venv",
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".pytest_cache",
    ".mypy_cache",
    "htmlcov",
]

[tool.mypy]
files = ["src"]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "langchain_openai.*",
    "langchain_anthropic.*",
    "langchain_aws.*",
    "langchain_google_vertexai.*",
    "langchain_google_genai.*",
    "langchain_ollama.*",
]
ignore_missing_imports = true

[tool.pyright]
include = ["src"]
pythonVersion = "3.9"
typeCheckingMode = "strict"
reportMissingImports = true
reportMissingTypeStubs = false

[tool.uv.workspace]
members = [
    "foobar",
]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "flake8-pyproject>=1.2.0",
    "mypy>=1.0.0",
    "pyright>=1.1.403",
]
